knitr::opts_chunk$set(echo = TRUE) # applies to all chunks
mani97 <- function(data){
newdata <- data %>%
rename(
number = c(1),
difference = c(2),
university = c(3),
city = c(4),
department = c(5),
type = c(6),
quota = c(7),
difference_quota = c(8),
accepted_number = c(9),
lowest_score = c(10),
highest_score = c(11),
lowest_ranking = c(12),
difference_ranking = c(13)
)  %>% select(-number, -difference, -difference_quota, -difference_ranking) %>% slice_head(n=nrow(data)-9)
return(newdata)
}
mani86 <- function(data){
newdata <- data %>%
rename(
number = c(1),
difference = c(2),
university = c(3),
city = c(4),
department = c(5),
type = c(6),
quota = c(7),
difference_quota = c(8),
accepted_number = c(9),
lowest_score = c(10),
highest_score = c(11),
lowest_ranking = c(12)
)  %>% select(-number, -difference, -difference_quota) %>% slice_head(n=nrow(data)-9)
return(newdata)
}
library(tidyverse)
library(lubridate)
library(tinytex)
library(readxl)
library(tidyr)
library(httr)
library(dplyr)
url<-'https://github.com/pjournal/boun01g-dol-r/blob/gh-pages/uni_exam_project/uni_exam.xlsx?raw=true'
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
raw_df20 <- read_excel(tf, sheet="20", skip=21)
raw_df19 <- read_excel(tf, sheet="19", skip=21)
raw_df18 <- read_excel(tf, sheet="18", skip=21)
raw_df17 <- read_excel(tf, sheet="17", skip=21)
raw_df16 <- read_excel(tf, sheet="16", skip=21)
file.remove(tf)
data2020 <- mani97(raw_df20)
data2020 <- mani97(raw_df20)
data2019 <- mani97(raw_df19)
data2018 <- mani86(raw_df18)
data2017 <- mani97(raw_df17)
data2016 <- mani97(raw_df16)
data2020 %>% summarise(exam20=n()) %>% mutate(data2019 %>% summarise(exam19=n())) %>% mutate(data2018 %>% summarise(exam18=n())) %>% mutate(data2017 %>% summarise(exam17=n())) %>% mutate(data2016 %>% summarise(exam16=n()))
data2020 %>% arrange(desc(highest_score)) %>% glimpse()
total_data <- full_join(data2016,data2017,by=c('university','department','city','type'),suffix = c('.2016','.2017'))%>%
full_join(. ,data2018,by=c('university','department','city','type'))%>%
full_join(. ,data2019,by=c('university','department','city','type'),suffix = c('.2018','.2019'))%>%
full_join(. ,data2020,by=c('university','department','city','type'))
names(total_data)[names(total_data)=='type']<-'type.2020'
names(total_data)[names(total_data)=='quota']<-'quota.2020'
names(total_data)[names(total_data)=='accepted_number']<-'accepted_number.2020'
names(total_data)[names(total_data)=='lowest_score']<-'lowest_score.2020'
names(total_data)[names(total_data)=='highest_score']<-'highest_score.2020'
names(total_data)[names(total_data)=='lowest_ranking']<-'lowest_ranking.2020'
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE) # applies to all chunks
mani97 <- function(data){
newdata <- data %>%
rename(
number = c(1),
difference = c(2),
university = c(3),
city = c(4),
department = c(5),
type = c(6),
quota = c(7),
difference_quota = c(8),
accepted_number = c(9),
lowest_score = c(10),
highest_score = c(11),
lowest_ranking = c(12),
difference_ranking = c(13)
)  %>% select(-number, -difference, -difference_quota, -difference_ranking) %>% slice_head(n=nrow(data)-9)
return(newdata)
}
mani86 <- function(data){
newdata <- data %>%
rename(
number = c(1),
difference = c(2),
university = c(3),
city = c(4),
department = c(5),
type = c(6),
quota = c(7),
difference_quota = c(8),
accepted_number = c(9),
lowest_score = c(10),
highest_score = c(11),
lowest_ranking = c(12)
)  %>% select(-number, -difference, -difference_quota) %>% slice_head(n=nrow(data)-9)
return(newdata)
}
library(tidyverse)
library(lubridate)
library(tinytex)
library(readxl)
library(tidyr)
library(httr)
url<-'https://github.com/pjournal/boun01g-dol-r/blob/gh-pages/uni_exam_project/uni_exam.xlsx?raw=true'
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
raw_df20 <- read_excel(tf, sheet="20", skip=21)
raw_df19 <- read_excel(tf, sheet="19", skip=21)
raw_df18 <- read_excel(tf, sheet="18", skip=21)
raw_df17 <- read_excel(tf, sheet="17", skip=21)
raw_df16 <- read_excel(tf, sheet="16", skip=21)
file.remove(tf)
data2020 <- mani97(raw_df20)
data2020 <- mani97(raw_df20)
data2019 <- mani97(raw_df19)
data2018 <- mani86(raw_df18)
data2017 <- mani97(raw_df17)
data2016 <- mani97(raw_df16)
data2020 %>% summarise(exam20=n()) %>% mutate(data2019 %>% summarise(exam19=n())) %>% mutate(data2018 %>% summarise(exam18=n())) %>% mutate(data2017 %>% summarise(exam17=n())) %>% mutate(data2016 %>% summarise(exam16=n()))
data2018 %>% arrange(desc(highest_score)) %>% glimpse()
data2016 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2017 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2018 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2019 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2020 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE) # applies to all chunks
mani97 <- function(data){
newdata <- data %>%
rename(
number = c(1),
difference = c(2),
university = c(3),
city = c(4),
department = c(5),
type = c(6),
quota = c(7),
difference_quota = c(8),
accepted_number = c(9),
lowest_score = c(10),
highest_score = c(11),
lowest_ranking = c(12),
difference_ranking = c(13)
)  %>% select(-number, -difference, -difference_quota, -difference_ranking) %>% slice_head(n=nrow(data)-9)
return(newdata)
}
mani86 <- function(data){
newdata <- data %>%
rename(
number = c(1),
difference = c(2),
university = c(3),
city = c(4),
department = c(5),
type = c(6),
quota = c(7),
difference_quota = c(8),
accepted_number = c(9),
lowest_score = c(10),
highest_score = c(11),
lowest_ranking = c(12)
)  %>% select(-number, -difference, -difference_quota) %>% slice_head(n=nrow(data)-9)
return(newdata)
}
library(tidyverse)
library(lubridate)
library(tinytex)
library(readxl)
library(tidyr)
library(httr)
url<-'https://github.com/pjournal/boun01g-dol-r/blob/gh-pages/uni_exam_project/uni_exam.xlsx?raw=true'
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
raw_df20 <- read_excel(tf, sheet="20", skip=21)
raw_df19 <- read_excel(tf, sheet="19", skip=21)
raw_df18 <- read_excel(tf, sheet="18", skip=21)
raw_df17 <- read_excel(tf, sheet="17", skip=21)
raw_df16 <- read_excel(tf, sheet="16", skip=21)
file.remove(tf)
data2020 <- mani97(raw_df20)
data2020 <- mani97(raw_df20)
data2019 <- mani97(raw_df19)
data2018 <- mani86(raw_df18)
data2017 <- mani97(raw_df17)
data2016 <- mani97(raw_df16)
data2020 %>% summarise(exam20=n()) %>% mutate(data2019 %>% summarise(exam19=n())) %>% mutate(data2018 %>% summarise(exam18=n())) %>% mutate(data2017 %>% summarise(exam17=n())) %>% mutate(data2016 %>% summarise(exam16=n()))
data2018 %>% arrange(desc(highest_score)) %>% glimpse()
data2016 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2017 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2018 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2019 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
data2020 %>% group_by(university, department) %>% summarise(highest_score=highest_score, lowest_score=lowest_score) %>% arrange(desc(highest_score)) %>% head(10)
all_years_data<-bind_rows(mutate(data2016,year=2016),
mutate(data2017,year=2017),
mutate(data2018,year=2018),
mutate(data2019,year=2019),
mutate(data2020,year=2020))
all_years_data%>%
group_by(year,department)%>%
summarise(department_quota=sum(quota))%>%
arrange(desc(department_quota))%>%head(20)
all_years_data%>%
group_by(year,city)%>%
summarise(city_quota=sum(quota))%>%
arrange(desc(city_quota))%>%head(20)
all_years_data%>%
group_by(year,university)%>%
summarise(university_quota=sum(quota))%>%
arrange(desc(university_quota))%>%head(20)
total_data <- full_join(data2016,data2017,by=c('university','department','city','type'),suffix = c('.2016','.2017'))%>%
full_join(. ,data2018,by=c('university','department','city','type'))%>%
full_join(. ,data2019,by=c('university','department','city','type'),suffix = c('.2018','.2019'))%>%
full_join(. ,data2020,by=c('university','department','city','type'))
names(total_data)[names(total_data)=='type']<-'type.2020'
names(total_data)[names(total_data)=='quota']<-'quota.2020'
names(total_data)[names(total_data)=='accepted_number']<-'accepted_number.2020'
names(total_data)[names(total_data)=='lowest_score']<-'lowest_score.2020'
names(total_data)[names(total_data)=='highest_score']<-'highest_score.2020'
names(total_data)[names(total_data)=='lowest_ranking']<-'lowest_ranking.2020'
total_data%>%arrange(lowest_ranking.2020) %>% glimpse()
bin_tr<- total_data%>%
filter(lowest_ranking.2020<1000)
tab2<-table(bin_tr$city,bin_tr$type.2020)
tab2
tab<-table(bin_tr$university,bin_tr$type.2020)
tab
besbin_tr<- total_data%>%
filter(lowest_ranking.2020<5000)
tab3<-table(besbin_tr$city,besbin_tr$type.2020)
tab3
tab4<-table(besbin_tr$university,besbin_tr$type.2020)
tab4
besbin_tr%>%
ggplot(aes(x = lowest_ranking.2020, fill = city)) +
geom_density(alpha = 0.3)
total_data %>%
filter(lowest_ranking.2020<10000)%>%
ggplot(aes(x = lowest_ranking.2020, fill = city)) +
geom_density(alpha = 0.4)
say_ranking<-total_data%>%
filter(type.2020=='SAY')%>%
arrange(lowest_ranking.2020)
head(say_ranking,10)
top_uni<- total_data%>%group_by(city)%>%summarise(n=n(),.groups='drop')%>%arrange(desc(n))
kable(top_uni%>%head(10))
top_uni<- total_data%>%select(university,city)%>%
group_by(city,university)%>%summarise(n=n(),.groups='drop')%>%arrange(desc(n))
top_uni%>%head(10)%>%ggplot(aes(reorder(city,n),n,fill=n))+geom_bar(stat="identity")+coord_flip()+theme_minimal()+scale_fill_gradientn(colors=viridis::viridis(100))+labs(title="Universities by Cities",x="city",y="Count",fill="Count")
top_uni1<- total_data%>%select(university,city)%>%
group_by(university)
total_data%>%
select(university,city,quota.2020)%>%
group_by(city)%>%summarise(avg_quota=(quota.2020),.groups='drop')%>%
ggplot(aes(reorder(city,avg_quota),avg_quota,fill=avg_quota))+
geom_bar(stat="identity")+
scale_fill_gradientn(colors=viridis::viridis(60))+
theme_minimal()+
theme(legend.position = "none",axis.text.x = element_text(angle=90))+
labs(title="Avg quota in Universities per city",x="",y="")
total_data <- full_join(data2016,data2017,by=c('university','department','city','type'),suffix = c('.2016','.2017'))%>%
full_join(. ,data2018,by=c('university','department','city','type'))%>%
full_join(. ,data2019,by=c('university','department','city','type'),suffix = c('.2018','.2019'))%>%
full_join(. ,data2020,by=c('university','department','city','type'))
names(total_data)[names(total_data)=='type']<-'type.2020'
names(total_data)[names(total_data)=='quota']<-'quota.2020'
names(total_data)[names(total_data)=='accepted_number']<-'accepted_number.2020'
names(total_data)[names(total_data)=='lowest_score']<-'lowest_score.2020'
names(total_data)[names(total_data)=='highest_score']<-'highest_score.2020'
names(total_data)[names(total_data)=='lowest_ranking']<-'lowest_ranking.2020'
bin_tr<- total_data%>%
filter(lowest_ranking.2020<1000)
tab2<-table(bin_tr$city,bin_tr$type.2020)
tab2
tab<-table(bin_tr$university,bin_tr$type.2020)
tab
besbin_tr<- total_data%>%
filter(lowest_ranking.2020<5000)
tab3<-table(besbin_tr$city,besbin_tr$type.2020)
tab3
tab4<-table(besbin_tr$university,besbin_tr$type.2020)
tab4
besbin_tr%>%
ggplot(aes(x = lowest_ranking.2020, fill = city)) +
geom_density(alpha = 0.3)
